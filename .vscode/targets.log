make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Fri May 13 10:33:46 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
gvm_go_name = go1.17
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /Users/eleonov/.nvm/versions/node/v16.13.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/eleonov/Projects/operators/projects-operator
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# environment
GVM_ROOT = /Users/eleonov/.gvm
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 156)
OPM = ./bin/opm
# makefile (from `Makefile', line 6)
VERSION = 0.0.1
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
GVM_PATH_BACKUP = /Users/eleonov/.gvm/bin:/Users/eleonov/google-cloud-sdk/bin:/Users/eleonov/.nvm/versions/node/v16.13.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/6_/nlyd25fs20v2zrx42_w1kzvm0000gn/T/vscode-ipc-72c0f0bc-1ac3-4f73-a407-9be60d81a467.sock
# environment
VSCODE_CWD = /
# environment
PATH = /Users/eleonov/.gvm/pkgsets/go1.17/global/bin:/Users/eleonov/.gvm/gos/go1.17/bin:/Users/eleonov/.gvm/pkgsets/go1.17/global/overlay/bin:/Users/eleonov/.gvm/bin:/Users/eleonov/.gvm/bin:/Users/eleonov/google-cloud-sdk/bin:/Users/eleonov/.nvm/versions/node/v16.13.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
GOPATH = /Users/eleonov/.gvm/pkgsets/go1.17/global
# environment
NVM_BIN = /Users/eleonov/.nvm/versions/node/v16.13.0/bin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 39)
BUNDLE_GEN_FLAGS = -q --overwrite --version $(VERSION) $(BUNDLE_METADATA_OPTS)
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.plWhmpBvGl/Listeners
# makefile (from `Makefile', line 176)
CATALOG_IMG = $(IMAGE_TAG_BASE)-catalog:v$(VERSION)
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from `Makefile', line 173)
BUNDLE_IMGS = $(BUNDLE_IMG)
# environment
PWD = /Users/eleonov/Projects/operators/projects-operator
# environment
PKG_CONFIG_PATH = /Users/eleonov/.gvm/pkgsets/go1.17/global/overlay/lib/pkgconfig:
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/eleonov
# environment
LD_LIBRARY_PATH = /Users/eleonov/.gvm/pkgsets/go1.17/global/overlay/lib:
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/eleonov/Library/Application Support/Code/CachedData/da15b6fd3ef856477bf6f4fb29ba1b7af717770d
# environment
LOGNAME = eleonov
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# environment
ZSH = /Users/eleonov/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
GVM_VERSION = 1.0.22
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
GVM_OVERLAY_PREFIX = /Users/eleonov/.gvm/pkgsets/go1.17/global/overlay
# environment
gvm_pkgset_name = global
# default
MAKE_VERSION := 3.81
# environment
USER = eleonov
# makefile
.DEFAULT_GOAL := all
# environment
GOROOT = /Users/eleonov/.gvm/gos/go1.17
# environment
 
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 44)
USE_IMAGE_DIGESTS = false
# makefile (from `Makefile', line 136)
HELM_OPERATOR = $(shell which helm-operator)
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# makefile (from `Makefile', line 109)
KUSTOMIZE = $(shell pwd)/bin/kustomize
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/6_/nlyd25fs20v2zrx42_w1kzvm0000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `Makefile', line 50)
IMG = controller:latest
# makefile (from `Makefile', line 25)
BUNDLE_METADATA_OPTS = $(BUNDLE_CHANNELS) $(BUNDLE_DEFAULT_CHANNEL)
# makefile (from `Makefile', line 105)
OS := darwin
# environment
VSCODE_IPC_HOOK = /Users/eleonov/Library/Application Support/Code/1.67.1-main.sock
# makefile (from `Makefile', line 106)
ARCH := amd64
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /Users/eleonov/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.103218018.103218024
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
FIGMA_PERSONAL_TOKEN = 252747-fcdd1f39-f958-47b0-9c2f-6536a153761d
# environment
PAGER = less
# makefile (from `Makefile', line 36)
BUNDLE_IMG = $(IMAGE_TAG_BASE)-bundle:v$(VERSION)
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# makefile (from `Makefile', line 32)
IMAGE_TAG_BASE = ronas.cloud/projects-operator
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 45541
# variable set hash-table stats:
# Load=95/1024=9%, Rehash=0, Collisions=3/151=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# /Users/eleonov/Projects/operators/projects-operator/bin (device 16777224, inode 103130545): 3 files, no impossibilities.
# ./bin (device 16777224, inode 103130545): 3 files, no impossibilities.
# . (device 16777224, inode 103129628): 13 files, no impossibilities.

# 19 files, no impossibilities in 3 directories.

# Implicit Rules

# No implicit rules.

# Files

all: docker-build
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

catalog-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 193):
	$(MAKE) docker-push IMG=$(CATALOG_IMG)
	

docker-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := docker-build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  commands to execute (from `Makefile', line 80):
	docker build -t ${IMG} .
	

.PHONY: all help run docker-build docker-push install uninstall deploy undeploy kustomize helm-operator bundle bundle-build bundle-push opm catalog-build catalog-push
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

opm:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 160):
	@{ \
	set -e ;\
	mkdir -p $(dir $(OPM)) ;\
	curl -sSLo $(OPM) https://github.com/operator-framework/operator-registry/releases/download/v1.19.1/$(OS)-$(ARCH)-opm ;\
	chmod +x $(OPM) ;\
	}
	

bundle: kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 142):
	operator-sdk generate kustomize manifests -q
	cd config/manager && $(KUSTOMIZE) edit set image controller=$(IMG)
	$(KUSTOMIZE) build config/manifests | operator-sdk generate bundle -q --overwrite --version $(VERSION) $(BUNDLE_METADATA_OPTS)
	operator-sdk bundle validate ./bundle
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

uninstall: kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 94):
	$(KUSTOMIZE) build config/crd | kubectl delete -f -
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-05 15:12:39
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

bundle-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 153):
	$(MAKE) docker-push IMG=$(BUNDLE_IMG)
	

catalog-build: opm
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 188):
	$(OPM) index add --container-tool docker --mode semver --tag $(CATALOG_IMG) --bundles $(BUNDLE_IMGS) $(FROM_INDEX_OPT)
	

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 70):
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)
	

kustomize:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

helm-operator:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

undeploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 103):
	$(KUSTOMIZE) build config/default | kubectl delete -f -
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: helm-operator
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 76):
	$(HELM_OPERATOR) run
	

bundle-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 149):
	docker build -f bundle.Dockerfile -t $(BUNDLE_IMG) .
	

deploy: kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 98):
	cd config/manager && $(KUSTOMIZE) edit set image controller=${IMG}
	$(KUSTOMIZE) build config/default | kubectl apply -f -
	

docker-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 84):
	docker push ${IMG}
	

install: kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 90):
	$(KUSTOMIZE) build config/crd | kubectl apply -f -
	

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=4/75=5%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Fri May 13 10:33:46 2022

 
