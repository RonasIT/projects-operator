{{- if .Values.cronjobs.enabled -}}
{{- $root := . -}}
{{- range .Values.cronjobs.schedulers }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ regexReplaceAll "_" .name "-" }}-cronjob
  labels:
    {{- include "laravel.labels" $root | nindent 4 }}
spec:
  schedule: "{{ .schedule | default $root.Values.cronjobs.schedule }}"
  concurrencyPolicy: "{{ .concurrencyPolicy | default $root.Values.cronjobs.concurrencyPolicy }}"
  startingDeadlineSeconds: {{ .startingDeadlineSeconds | default $root.Values.cronjobs.startingDeadlineSeconds }}
  successfulJobsHistoryLimit: {{ .successfulJobsHistoryLimit | default $root.Values.cronjobs.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        metadata:
          labels:
            {{- include "laravel.labels" $root | nindent 12 }}
        spec:
          {{- with $root.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "laravel.serviceAccountName" $root }}
          securityContext:
            {{- toYaml $root.Values.podSecurityContext | nindent 12 }}
          containers:
          - name: {{ regexReplaceAll "_" .name "-" }}-cronjob
            image: "{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}"
            imagePullPolicy: {{ $root.Values.image.pullPolicy }}
            volumeMounts:
              - name: gcs
                mountPath: "/mnt/gcs"
                readOnly: true
            resources:
{{ toYaml ( .resources | default $root.Values.cronjobs.resources ) | indent 16 }}
            command:
              - sh
              - -c
              - {{ .cmd }}
          volumes:
            - name: gcs
              secret:
                secretName: gcs-key
                optional: true
          restartPolicy: "{{ .restartPolicy | default $root.Values.cronjobs.restartPolicy }}"
{{- end }}
{{- end }}
